version: '3.9'

services:

  nginx:
    container_name: pv-nginx
    image: nginx:stable-alpine3.19-slim
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:8080"

  db-places-visiting:
    image: postgres:16.2-alpine
    container_name: pv-postgres162
    environment:
      - POSTGRES_USER=${DATASOURCE_USER}
      - POSTGRES_PASSWORD=${DATASOURCE_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES=${USER_DATABASE_NAME}
    ports:
      - '5432:5432'
    volumes:
      - pv-postgres:/var/lib/postgresql/data
      - ./create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq3-management
    hostname: rabbitmq                        # hostname will be used by RabbitMQ to name the server instance.
    restart: on-failure
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      #  disk_free_limit=Disk space - low watermark
      #  log_levels=logging level for different operations
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 102483648 -rabbitmq_management load_definitions "/run/secrets/rabbit_config"
    secrets:
      - rabbit_config
    ports:
      - "5672:5672"
      - '15672:15672' # management
    #      - '61613:61613' # stomp
    volumes:
      - rabbitmq:/var/lib/rabbitmq
      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins

  places-visiting-api:
    container_name: places-visiting-api
    build:
      context: ../user-service-api/
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATASOURCE_URL=${DATASOURCE_URL}${USER_DATABASE_NAME}
      - DATASOURCE_USER=${DATASOURCE_USER}
      - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
      - SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD_DEFAULT}
      - GOOGLE_OAUTH_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID}
      - GOOGLE_OAUTH_CLIENT_SECRET=${GOOGLE_OAUTH_CLIENT_SECRET}
    depends_on:
      db-places-visiting:
        condition: service_healthy

volumes:
  pv-postgres:
  rabbitmq:

secrets:
  rabbit_config:
    file: ./rabbitmq/rabbit_definitions.json #import of predefined settings