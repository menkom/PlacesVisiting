version: '3.9'

services:

  nginx:
    container_name: pv-nginx
    image: nginx:stable-alpine3.19-slim
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:8080"

  db-places-visiting:
    image: postgres:16.2-alpine
    container_name: pv-postgres162
    environment:
      - POSTGRES_USER=${DATASOURCE_USER}
      - POSTGRES_PASSWORD=${DATASOURCE_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES=${USER_DATABASE_NAME}
    ports:
      - '5432:5432'
    volumes:
      - pv-postgres:/var/lib/postgresql/data
      - ./create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  places-visiting-api:
    container_name: places-visiting-api
    build:
      context: ../user-service-api/
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATASOURCE_URL=${DATASOURCE_URL}${USER_DATABASE_NAME}
      - DATASOURCE_USER=${DATASOURCE_USER}
      - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
      - SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD_DEFAULT}
      - GOOGLE_OAUTH_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID}
      - GOOGLE_OAUTH_CLIENT_SECRET=${GOOGLE_OAUTH_CLIENT_SECRET}
    depends_on:
      db-places-visiting:
        condition: service_healthy

volumes:
  pv-postgres: